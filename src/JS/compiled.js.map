{"version":3,"file":"compiled.js","sourceRoot":"","sources":["../TS/init.ts","../TS/helperFunctions.ts","../TS/debug.ts","../TS/classes/Health.ts","../TS/classes/player.ts","../TS/classes/projectile.ts","../TS/classes/enemy.ts","../TS/classes/particle.ts","../TS/classes/highScores.ts","../TS/vars.ts","../TS/Events.ts","../TS/animate.ts","../TS/functions.ts"],"names":[],"mappings":"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","sourcesContent":["const ISGITHUB = (window.location.host == \"erikrospo.github.io\");\r\nconst ISDEBUG = (window.location.search.includes(\"debug\"));\r\nconst ISDEV = (window.location.search.includes(\"dev\"));\r\nconst ISPROD = (ISGITHUB && !ISDEBUG && !ISDEV);\r\nconst SHOWDEBUG = (ISDEBUG || ISDEV);\r\nconst PRODUCTION = (ISPROD && ISGITHUB);\r\nconst PROD = (PRODUCTION);\r\nconst ISLOCAL = (window.location.hostname == \"localhost\");\r\nconst ISLOCALIP = (window.location.hostname.startsWith(\"127.0.0\"));\r\nconst DEBUGFLAG = (!PROD || ISDEBUG || ISDEV);\r\nfunction deviceType() {\r\n    const ua = navigator.userAgent;\r\n    if (/(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(ua)) {\r\n        return \"tablet\";\r\n    } else if (/Mobile|Android|iP(hone|od)|IEMobile|BlackBerry|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)/.test(ua)) {\r\n        return \"mobile\";\r\n    }\r\n    return \"desktop\";\r\n}\r\nconst ISMOBILE = (deviceType() == \"mobile\");\r\nconst ISTABLET = (deviceType() == \"tablet\");\r\nconst ISDESKTOP = (deviceType() == \"desktop\");\r\nconst MOBILEVIEW = (ISMOBILE || ISTABLET || window.location.search.includes(\"ForceMobile\"));\r\nlet SFXMuted = true as boolean;\r\nlet OptionsOpen = false as boolean;\r\nlet browserType = navigator;\r\nconsole.log(browserType);\r\nconst performanceMode = true as boolean;\r\nconst canvas = document.querySelector(\"canvas\") as HTMLCanvasElement;\r\nconst c = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\ncanvas.width = innerWidth;\r\ncanvas.height = innerHeight;\r\nc.shadowBlur = 20;\r\nc.shadowColor = \"black\";\r\nconst scoreEL = document.querySelector(\"#scoreEL\") as HTMLSpanElement;\r\nconst MoneyEL = document.querySelector(\"#moneyEL\") as HTMLSpanElement;\r\nconst ShopMoney = document.querySelector(\"#ShopMoney\") as HTMLSpanElement;\r\nconst startGameButton = document.querySelector(\"#StartGameWrapper\") as HTMLDivElement;\r\nconst HighScoreLabel = document.querySelector(\"#highScoreTextModal\") as HTMLParagraphElement;\r\nconst ModalEL = document.querySelector(\"#ModalEL\") as HTMLDivElement;\r\nconst TitleEL = document.querySelector(\"#titleElement\") as HTMLHeadingElement;\r\nconst BigScoreEL = document.querySelector(\"#BigScoreEL\") as HTMLHeadingElement;\r\nconst BigScoreELLabel = document.querySelector(\"#PointsLabelEL\") as HTMLSpanElement;\r\nconst NameDiv = document.querySelector(\"#NameInputDiv\") as HTMLDivElement;\r\nconst HighScoreList = document.querySelector(\"#HighScore\") as HTMLOListElement;\r\nHighScoreList.style.display = \"block\";\r\n//Sound Effects\r\nlet relPath = PROD ? \"/CanvasShooter/\" : \"\";\r\nconst ShootSound = new Audio(relPath + \"Audio/sound/Shoot.wav\") as HTMLAudioElement;\r\nconst HitNoKillSound = new Audio(relPath + \"Audio/sound/HitNoKill.wav\") as HTMLAudioElement;\r\nconst HitAndKillSound = new Audio(relPath + \"Audio/sound/HitAndKill.wav\") as HTMLAudioElement;\r\nconst HealthGetSound = new Audio(relPath + \"Audio/sound/HealthGet.wav\") as HTMLAudioElement;\r\nconst HealthLoseSound = new Audio(relPath + \"Audio/sound/HealthLose.wav\") as HTMLAudioElement;\r\nconst MissSound = new Audio(relPath + \"Audio/sound/Miss.wav\") as HTMLAudioElement;\r\n\r\n//Pause Menu\r\nconst PauseModal = document.querySelector(\"#PauseModal\") as HTMLDivElement;\r\nconst PauseModalScore = document.querySelector(\"#PauseModalScore\") as HTMLSpanElement;\r\nconst PauseModalScoreLabel = document.querySelector(\"#PauseModalScoreLabel\") as HTMLSpanElement;\r\nconst PauseModalOptionsButton = document.querySelector(\"#PauseModalOptionsButton\") as HTMLButtonElement;\r\nconst PauseModalPlayButton = document.querySelector(\"#PauseModalPlayButton\") as HTMLButtonElement;\r\nconst PauseModalOpenerButton = document.querySelector(\"#PauseMenuOpenerButton\") as HTMLButtonElement;\r\nconst PauseModalOpenerIcon = document.querySelector(\"#PauseOpenerIcon\") as HTMLSpanElement;\r\n//Options Menu\r\nconst OptionsMenu = document.querySelector(\"#OptionsModal\") as HTMLDivElement;\r\nconst OptionsSFXSlider = document.querySelector(\"#SFXSlider\") as HTMLInputElement;\r\nconst OptionsParticleSwitch = document.querySelector(\"#ParticleOptionsSwitch\") as HTMLInputElement;\r\nconst OptionsBackButton = document.querySelector(\"#OptionsBackButton\") as HTMLButtonElement;\r\nconst OptionsParticleSpan = document.querySelector(\"#ParticleOptionsSpan\") as HTMLSpanElement;\r\nconst OptionsAimSlider = document.querySelector(\"#OptionsAimSlider\") as HTMLInputElement;\r\nif (DEBUGFLAG) {\r\n    console.log(OptionsAimSlider);\r\n}\r\n//debugging elements:\r\nconst debugDiv = document.querySelector(\"#debugDiv\") as HTMLDivElement;\r\nconst debugList = document.querySelector(\"#debugList\") as HTMLUListElement;\r\n//define other global constants\r\nconst w = canvas.width;\r\nconst h = canvas.height;\r\nconst cw = w / 2;\r\nconst ch = h / 2;\r\n","/**\n * @param val \n * the value\n * @param base \n * the logrithmic base\n * @returns Number\n * Returns the logrithim of a given val for a given base\n * \n */\nfunction logx(val: number, base: number): number {\n    return Math.log(val) / Math.log(base);\n}\n/**\n * @param {number} min the minumum number\n * @param {number} max the maximum number\n * @returns {number} a random number between min and max\n */\nfunction random(min = 0, max = 1): number {\n    return map(Math.random(), 0, 1, min, max);\n\n}\n/**\n * @param {number} min the minumum number [inclusive]\n * @param {number} max the maximum number [exclusive]\n * @returns {number} a random integer between min and max \n */\nfunction randomInt(min: number, max: number): number {\n    return Math.floor(random(min, max));\n}\n/**\n * \n * @param input the input of the function\n * @param input_start the minumum value of input\n * @param input_end the maximum value of input\n * @param output_start the minumum return value\n * @param output_end the maximum return value\n * @returns a number between @param output_start and @param output_end\n */\nfunction map(input: number, input_start: number, input_end: number, output_start: number, output_end: number):number {\n    return output_start + ((output_end - output_start) / (input_end - input_start)) * (input - input_start);\n}\n/**\n * \n * @param p1 a point with an x and y\n * @param p2 a point with an x and y\n * @param t threshold to test within\n * @returns {boolean} boolean value determining if the points are in range of the threshold\n */\nfunction threshold(p1: { x: number; y: number; }, p2: { x: number; y: number; }, t: number):boolean {\n    return (Math.sqrt(((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2)) - (2 * t) < 0);\n}\nfunction FrameIDToTime(ID: number) {\n    var Second = ID / 60;\n    return Second;\n}\n/**\n * @param x1 X value of the first point\n * @param y1 Y value of the first point\n * @param x2 X value of the second point\n * @param y2 Y value of the second point\n * @returns the distance between these two points\n */\nfunction distance(x1: number, y1: number, x2: number, y2: number): number {\n    return (((x1-x2)**2)+((y1-y2)**2))**0.5\n}\n/**\n * \n * @param value A list of values\n * @returns A randomly selected value from values\n */\nfunction randomChoice(value: any[]): any {\n    let i = Math.floor(random() * value.length)\n    return value[i]\n}\n/**\n * \n * @param value A list of values\n * @param not A list of values to not pick from\n * @returns A value from the list value that is not in the list not\n */\nfunction randomChoiceNot(value: any[], not: any[], iterations: number = value.length) {\n    let i = randomChoice(value)\n    let ic = 0;\n    while (i in not && ic < iterations) {\n        i = randomChoice(value)\n        ic++;\n    }\n    if (ic >= iterations) {\n        console.log(\"randomChoiceNot failed\");\n        return undefined\n    }\n    return i\n}\n/**\n * \n * @param min Minimum value\n * @param max Maximum value\n * @param not Numbers not to choose\n * @returns A number between Min and Max that is not in not\n */\nfunction randomNot(min: number, max: number, not: number[]): number {\n    let i = random(min, max)\n    while (i in not) {\n        i = random(min, max)\n    }\n    return i\n}\n/**\n * @param min Minumum value\n * @param max Maximum value\n * @param not Numbers not to choose\n * @returns An integer between Min and Max that is not in not\n*/\nfunction intBetweenNot(min: number, max: number, not: number[]): number {\n    let i = randomInt(min, max)\n    while (i in not) {\n        i = randomInt(min, max)\n    }\n    return i\n}\n/**\n * \n * @param bias A number between 0 and 1 that determines the bias of the coin flip\n * @returns true or false, weighted by bias\n */\nfunction coinFlip(bias = 0.5): boolean {\n    return (random() > bias);\n}\nfunction clip(n: number, min: number, max: number): number {\n    return Math.min(Math.max(n, min), max)\n}\nfunction clamp(x: number, min: number, max: number): number {\n    return Math.min(Math.max(x, min), max);\n}\n/**\n * Returns a number that is strictly between omin and omax\n * @param {number} i number to scale\n * @param {number} imin the minumum value for i\n * @param {number} imax the maximum value for i\n * @param {number} omin the minumum value for output\n * @param {number} omax the maximum value for output\n * @returns {number} the result\n */\nfunction strictScale(i: number, imin: number, imax: number, omin: number, omax: number): number {\n    return clip(map(clip(i, imin, imax), imin, imax, omin, omax), omin, omax)\n}\nfunction sum(input: Array<number>): number {\n    let result = 0\n    for (let index = 0; index < input.length; index++) {\n        result += input[index]\n    }\n    return result\n\n}\nfunction minl(numbers: ArrayLike<number>): number {\n    let v = numbers[0] as number\n    for (let i=0;i<=numbers.length;i++){\n        v=Math.min(v,numbers[i])\n    }\n    return v\n}\nfunction maxl(numbers: ArrayLike<number>): number {\n    let v=numbers[0] as number\n    for (let i=0;i<=numbers.length;i++){\n        v=Math.max(v,numbers[i])\n    }\n    return v\n}\nfunction smoothStep(x: number, min: number, max: number): number {\n    let t = (x - min) / (max - min);\n    return t * t * (3 - 2 * t);\n}\nfunction sigmoid(x: number, k: number): number {\n    return 1 / (1 + Math.exp(-k * x));\n}\nfunction smoothSigmoid(x: number, k: number): number {\n    return smoothStep(sigmoid(x, k), 0, 1);\n}\nfunction min(...numbers: number[]): number {\n    let v = numbers[0];\n    for (let i = 0; i < numbers.length; i++) {\n        v = Math.min(v, numbers[i]);\n    }\n    return v;\n}\nfunction max(...numbers: number[]): number {\n    let v = numbers[0];\n    for (let i = 0; i < numbers.length; i++) {\n        v = Math.max(v, numbers[i]);\n    }\n    return v;\n}\nfunction round(Value: number, Place = 1): number {\n    return Math.round(Value / (10 ** Place)) * (10 ** Place);\n}\nfunction floor(Value: number, Place = 1): number {\n    return Math.floor(Value / (10 ** Place)) * (10 ** Place);\n}\nfunction ceil(Value: number, Place = 1): number {\n    return Math.ceil(Value / (10 ** Place)) * (10 ** Place);\n}\n","function AddDebugItem(value: any, id: string) {\r\n    if (!DEBUGFLAG) {\r\n        return null;\r\n    }\r\n    var node = document.createElement(\"li\");\r\n    node.id = id;\r\n    node.innerText = id + \": \" + value.toString()\r\n\r\n    node.classList.add(\"debugItem\")\r\n    debugList.appendChild(node);\r\n    return debugList\r\n}\r\nfunction SetDebugItem(value: any, id: string, label?: string) {\r\n    if (!DEBUGFLAG) {\r\n        return null;\r\n    }\r\n    var node = document.getElementById(id);\r\n    if (node == null) {\r\n        AddDebugItem(value, id);\r\n        node = document.getElementById(id);\r\n    }\r\n    if (node == null) {\r\n        return null;\r\n    }\r\n    if (label == undefined || label == null) {\r\n        label = id;\r\n    }\r\n    node.innerText = label + \": \" + value.toString()\r\n    return node\r\n}\r\nAddDebugItem(0, \"playerHealth\");\r\nAddDebugItem(innerWidth, \"windowWidth\");\r\nAddDebugItem(innerHeight, \"windowHeight\");\r\nAddDebugItem((Math.sqrt(w * w + h * h) / 2000), \"EnemySpeedMultiplier\");\r\nAddDebugItem(window.location.href, \"Url\");\r\nAddDebugItem(0, \"MaxEnemies\")\r\n","function CreateHealth(health: number, MaxHealth: number | 5) {\n    let Health = new HealthBar(health, MaxHealth);\n    return Health;\n}\nclass HealthBar {\n    private health: number;\n    private MaxHealth: number | 5;\n    constructor(health: number, MaxHealth: number | 5) {\n        this.health = health;\n        this.MaxHealth = MaxHealth;\n    }\n    public get Health(): number {\n        return this.health;\n    }\n    public get maxHealth(): number {\n        return this.MaxHealth;\n    }\n    public set Health(health: number) {\n        this.health = health;\n        this.draw()\n    }\n    public set maxHealth(MaxHealth: number | 5) {\n        this.MaxHealth = MaxHealth;\n        this.draw();\n    }\n    public addHealth(health: number | 1): number {\n        if (this.health < this.maxHealth) {\n            this.health += health;\n        }\n        this.draw()\n        return this.health;\n    }\n    public removeHealth(health = 1): number {\n        this.health -= health;\n        this.draw()\n        return this.health;\n    }\n    public get willDie():boolean{\n        return ((this.health-1)<=0)\n    }\n    public get dead():boolean{\n        return this.health==0\n    }\n    public draw() {\n        //Define a draw function that gets the health bar dom element and updates it\n        //the health bar has spans with either \"favorite\" or \"favorite-border\" innerHTML\n        //if there is more max health than spans, create more spans\n        //if there is less max health than spans, remove the extra spans\n        let healthBarEl = document.getElementById(\"healthBar\");\n        if (healthBarEl == null) {\n            throw new Error(\"Health bar element not found\");\n        }\n        let healthBarSpanCount=healthBarEl.children.length;\n        let healthBarSpanMax=this.MaxHealth;\n        //remove all of the spans, then add the correct number of spans\n        for (let i = 0; i < healthBarSpanCount; i++) {\n            try {\n                healthBarEl.removeChild(healthBarEl.children[0]);\n            } catch (error) {\n                if (error instanceof TypeError) {\n                    console.log(\"Health bar span not found\");\n                }\n                else if (error instanceof RangeError) {\n                    console.log(\"Health bar span not found\");\n                } else if (error instanceof ReferenceError) {\n                    console.log(\"Health bar span not found\");\n                }\n                console.log(\"Health bar span not found\");\n            }\n\n        }\n        for (let i = 0; i < healthBarSpanMax; i++) {\n            let healthBarSpan=document.createElement(\"span\");\n            healthBarSpan.classList.add(\"material-icons\");\n            healthBarSpan.classList.add(\"healthBarSpan\");\n            healthBarEl.appendChild(healthBarSpan);\n        }\n        let healthBarSpans=healthBarEl.children\n        for(let i=0;i<healthBarSpanMax;i++){\n            var el=healthBarSpans.item(i) as HTMLSpanElement;\n            el.innerText=\"favorite\";\n\n            if(i<this.health){\n                el.style.color=\"red\"\n            }\n            else{\n                el.style.color=\"grey\"\n            }\n        }\n    }\n}\n","//define a player, and their draw function\r\nclass Player {\r\n    x: number;\r\n    y: number;\r\n    radius: number;\r\n    color: string;\r\n    Damage: number;\r\n    ShotSpeed: number;\r\n    ShotsFired: number;\r\n    MultiShot: number;\r\n    AutoFire: boolean;\r\n    AutoRotate: boolean;\r\n    ShotSize: number;\r\n    Health: HealthBar;\r\n    spread: number;\r\n    barrelRadius: any;\r\n    constructor(x: number, y: number, radius: number, color: string) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.Damage = 10;\r\n        this.ShotSpeed = 5;\r\n        this.ShotsFired = 1;\r\n        this.MultiShot = 1;\r\n        this.AutoFire = false;\r\n        this.AutoRotate = false;\r\n        this.ShotSize = 5;\r\n        this.Health = CreateHealth(5, 5);\r\n        this.Health.draw();\r\n        this.spread = 0.2;\r\n        this.barrelRadius = this.radius * (this.ShotSpeed / 2.5);\r\n        SetDebugItem(this.Health.Health, \"playerHealth\");\r\n    }\r\n\r\n    public update(): void {\r\n        SetDebugItem(this.Health.Health, \"playerHealth\");\r\n        this.draw();\r\n        this.drawHealth();\r\n\r\n    }\r\n    public drawHealth(): void {\r\n        this.Health.draw();\r\n    }\r\n    public draw(): void {\r\n        renderWireframe(this, \"player\");\r\n        c.fillStyle = this.color;\r\n        c.arc(this.x, this.y, this.radius, 0, TWOPI, false);\r\n        c.fill();\r\n        if (ShowPlayerAim) {\r\n            let m_angle = Math.atan2(mouse.y - this.y, mouse.x - this.x);\r\n            let p1 = { x: this.radius * Math.cos(m_angle - this.spread) + this.x, y: this.radius * Math.sin(m_angle - this.spread) + this.y };\r\n            let p2 = { x: this.radius * Math.cos(m_angle + this.spread) + this.x, y: this.radius * Math.sin(m_angle + this.spread) + this.y };\r\n            let p3 = { x: this.barrelRadius * Math.cos(m_angle - this.spread * 1 / (this.barrelRadius / this.radius)) + this.x, y: this.barrelRadius * Math.sin(m_angle - this.spread * 1 / (this.barrelRadius / this.radius)) + this.y };\r\n            let p4 = { x: this.barrelRadius * Math.cos(m_angle + this.spread * 1 / (this.barrelRadius / this.radius)) + this.x, y: this.barrelRadius * Math.sin(m_angle + this.spread * 1 / (this.barrelRadius / this.radius)) + this.y };\r\n            c.moveTo(p1.x, p1.y);\r\n            c.lineTo(p2.x, p2.y);\r\n            c.lineTo(p4.x, p4.y);\r\n            c.lineTo(p3.x, p3.y);\r\n            c.lineTo(p1.x, p1.y);\r\n            c.fill();\r\n        }\r\n    }\r\n    public get willDie(): boolean {\r\n        return this.Health.willDie;\r\n    }\r\n}","//define a projectile, and its draw function, as well as its update function\nclass Projectile {\n    x: number;\n    y: number;\n    radius: number;\n    color: string;\n    velocity: { x: number, y: number };\n    damage: number;\n    constructor(x: number, y: number, r: number, color: string, velocity: { x: number; y: number; }, damage: number) {\n        this.x = x;\n        this.y = y;\n        this.radius = r;\n        this.color = color;\n        this.velocity = velocity;\n        this.damage = damage;\n    }\n    draw() {\n        renderWireframe(this, \"projectile\");\n        c.beginPath();\n        c.arc(this.x, this.y, this.radius, 0, TWOPI, false);\n        c.fillStyle = this.color;\n        c.fill();\n    }\n    update() {\n        this.draw();\n        this.x += this.velocity.x;\n        this.y += this.velocity.y;\n    }\n\n    public get IsOffScreen(): boolean {\n        return ((this.x + this.radius < 0) ||\n            (this.y + this.radius < 0) ||\n            (this.x - this.radius > w) ||\n            (this.y - this.radius > h));\n    }\n\n}","//define a enemy, and its draw function, as well as its update function\r\nclass Enemy {\r\n    x: number;\r\n    y: number;\r\n    radius: number;\r\n    color: string;\r\n    velocity: { x: number, y: number };\r\n    startingRadius: number;\r\n    id: any;\r\n    timeCreated: string | Date;\r\n    minHealth: number;\r\n    burning: boolean;\r\n    /**\r\n     * \r\n     * @param x starting x for Enemy\r\n     * @param y starting y for Enemy\r\n     * @param r starting radius for Enemy\r\n     * @param color color for Enemy\r\n     * @param velocity Starting velocity for enemy.\r\n     */\r\n    constructor(x: number, y: number, r: number, color: string, velocity: { x: number; y: number; }) {\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = r;\r\n        this.color = color;\r\n        this.velocity = velocity;\r\n        this.startingRadius = this.radius;\r\n        this.minHealth = 5;\r\n        this.timeCreated = Date();\r\n        this.burning = false;\r\n    }\r\n    /**\r\n     * @name draw\r\n     * @description draws the enemy\r\n     * @returns none\r\n     */\r\n    draw(): void {\r\n        renderWireframe(this, \"enemy\");\r\n\r\n        if (this.burning) {\r\n            c.beginPath();\r\n            c.arc(this.x, this.y, this.radius + 5, 0, TWOPI);\r\n            c.fillStyle = 'rgb(255,0,0);';\r\n            c.fill();\r\n        }\r\n        c.beginPath();\r\n        c.arc(this.x, this.y, this.radius, 0, TWOPI, false);\r\n        c.fillStyle = this.color;\r\n        c.fill();\r\n    }\r\n    /**\r\n     * @name update\r\n     * @description updates the enemy's position\r\n     * @returns if the enemy is dead\r\n     */\r\n    update(): string {\r\n        this.x += this.velocity.x;\r\n        this.y += this.velocity.y;\r\n        if (this.IsDead || this.radius < 0) {\r\n            return \"dead\";\r\n        }\r\n        try {\r\n            this.draw();\r\n        } catch (e) {\r\n            if (e instanceof DOMException) {\r\n                console.log(\"DOMException\");\r\n                return \"dead\";\r\n            } else {\r\n                alert(\"Error: \" + e);\r\n                throw e;\r\n            }\r\n\r\n        }\r\n        return \"alive\";\r\n\r\n    }/**\r\n     * @name ShouldDie\r\n     * @description Returns whether the Enemy should die with the given damage\r\n     * @param {number} damage how much damage should be dealt\r\n     * @returns a boolean of whether the enemy should die\r\n     */\r\n    ShouldDie(damage: number): boolean {\r\n        return (this.radius - damage < this.minHealth);\r\n    }\r\n    /**\r\n     * @name IsDead\r\n     * @description returns if the enemy is dead\r\n     * @returns {boolean} if the enemy is dead or not\r\n     */\r\n    public get IsDead(): boolean {\r\n        return this.radius < this.minHealth;\r\n    }\r\n\r\n    /**\r\n     * @name damage\r\n     * @description Damages the enemy, and returns if the enemy is dead.\r\n     * @param {number} amount how much to damage the enemy by\r\n     * @returns If the enemy is dead\r\n     */\r\n    damage(amount: number): boolean {\r\n        this.radius -= amount\r\n        return this.IsDead\r\n    }\r\n}","//define a particle, and its draw function, as well as its update function\n\nclass Particle {\n    x: number;\n    y: number;\n    radius: number;\n    color: string;\n    velocity: { x: number, y: number };\n    alpha: number;\n    constructor(x: any, y: any, r: number, color: any, velocity: { x: number; y: number; }) {\n        this.x = x;\n        this.y = y;\n        this.radius = r;\n        this.color = color;\n        this.velocity = velocity;\n        this.alpha = 1;\n    }\n    draw():void {\n        renderWireframe(this, \"particle\");\n        c.save();\n        c.globalAlpha = this.alpha;\n        c.beginPath();\n        c.arc(this.x, this.y, this.radius, 0, TWOPI, false);\n        c.fillStyle = this.color;\n        c.fill();\n        c.restore();\n    }\n    update():void {\n        this.draw();\n        this.velocity.x *= ParticleFriction;\n        this.velocity.y *= ParticleFriction;\n        this.x += this.velocity.x;\n        this.y += this.velocity.y;\n        this.alpha -= random(0.001, 0.025) * ParticleFadeSpeedMultiplier;\n    }\n}","class HighScore {\n    scores: number[]\n    constructor() {\n        this.scores = [];\n    }\n    addScore(score: number): void {\n        if (score != 0) this.scores.push(score);\n        this.sort();\n    }\n    sort(): void {\n        this.scores.sort((a: number, b: number) => a - b);\n        this.scores.reverse();\n    }\n    isHighScore(score: number): boolean {\n        return this.scores.every((value) => { return value < score });\n    }\n    public get Html(): string {\n        let ScoreElement = document.createElement(\"ol\");\n        this.sort();\n        for (let index = 0; index < Math.min(this.scores.length, 10); index++) {\n            const element = this.scores[index];\n            var node = document.createElement(\"li\");\n            switch (index) {\n                case 0:\n                    node.style.color = \"#ffd700\";\n                    node.appendChild(document.createTextNode(element.toString(10)));\n                    break;\n                case 1:\n                    node.style.color = \"#c0c0c0\";\n                    node.appendChild(document.createTextNode(element.toString(10)));\n                    break;\n                case 2:\n                    node.style.color = \"#CD7F32\";\n                    node.appendChild(document.createTextNode(element.toString(10)));\n                    break;\n                default:\n                    node.style.color = \"#FFFFFF\"\n                    node.appendChild(document.createTextNode(element.toString(10)));\n                    break;\n            }\n            ScoreElement.appendChild(node)\n        }\n        ScoreElement.style.display = \"block\";\n        return ScoreElement.innerHTML\n    }\n}","const EnemySpawnTimeDecrement = 1 as number;\r\nconst EnemySpawnBias = innerHeight / innerWidth as number;\r\nconst EnemyMultiplier = (Math.sqrt(w * w + h * h) / 2000) as number;\r\nconst ProjectileSpeedMultiplier = 1 as number;\r\nconst ProjectileColor = \"white\" as string;\r\nconst PlayerColor = \"white\" as string;\r\nconst PlayerRadius = 10 as number;\r\nconst BackgroundColor = \"0,0,0\" as string;\r\nconst ParticleFriction = 0.99 as number;\r\nconst ParticleMultiplier = 2 as number;\r\nconst ParticleSpeed = 5 as number;\r\nconst ParticleFadeSpeedMultiplier = 1 as number;\r\nconst ParticleCap = 50 as number;\r\nlet MaxEnemies = 10 as number;\r\nconst RenderWireframe = false as boolean;\r\nconst PI = Math.PI;\r\nconst TWOPI = PI * 2;\r\nlet player = new Player(cw, ch, PlayerRadius, PlayerColor);\r\nlet projectiles = [] as Projectile[];\r\nlet enemies = [] as Enemy[];\r\nlet particles = [] as Particle[];\r\nlet GameStarted = false as boolean;\r\nlet UseParticles = true as boolean;\r\nlet Paused = false as boolean;\r\nlet ShopOpen = false as boolean;\r\nlet lastInterval: any;\r\nlet EnemySpawnTime = 50 as number;\r\nlet animationID: number;\r\nlet score = 0 as number;\r\nlet DefaultEnemySpawnTime = 50 as number;\r\nlet enemiesToRemove = [] as string[];\r\nlet Scores = new HighScore() as HighScore;\r\nlet lastScore = 0 as number;\r\nlet HealthFreq = 25000 as number;\r\nlet EnemySpeedMult = 1 as number;\r\nlet EnemyUpFreq = 5000 as number;\r\nlet HS = true as boolean;\r\nlet ShowPlayerAim = false as boolean;\r\nlet mouse = {\r\n    x: 0,\r\n    y: 0,\r\n    dx: 0,\r\n    dy: 0,\r\n    down: false,\r\n};","//whenever the user clicks, spawn a projectile\r\n// addEventListener(\"click\", (event) => spawnProjectile(event.clientX, event.clientY));\r\naddEventListener(\"pointerdown\", (evt) => {\r\n    mouse.x = evt.clientX;\r\n    mouse.y = evt.clientY;\r\n    mouse.down = true;\r\n    spawnProjectile();\r\n    evt.preventDefault();\r\n});\r\naddEventListener(\"pointerup\", (evt) => {\r\n    mouse.x = evt.clientX;\r\n    mouse.y = evt.clientY;\r\n    mouse.down = true;\r\n});\r\naddEventListener(\"load\", () => {\r\n    PageLoad();\r\n});\r\naddEventListener(\"pointermove\", (event) => {\r\n    mouse.x = event.clientX;\r\n    mouse.y = event.clientY;\r\n    mouse.dx = event.movementX;\r\n    mouse.dy = event.movementY;\r\n    SetDebugItem(mouse.x.toString(), \"mouse.x\");\r\n    SetDebugItem(mouse.y.toString(), \"mouse.y\");\r\n    SetDebugItem(mouse.dx.toString(), \"mouse.dx\");\r\n    SetDebugItem(mouse.dy.toString(), \"mouse.dy\");\r\n    SetDebugItem((mouse.x + mouse.dx).toString(), \"predicted mouse.x\");\r\n    SetDebugItem((mouse.y + mouse.dy).toString(), \"predicted mouse.y\");\r\n})\r\n//when the user clicks the start button, start the game\r\nstartGameButton.addEventListener(\"click\", () => {\r\n    ModalEL.style.display = \"none\";\r\n    init();\r\n    animate();\r\n    //hide the UI\r\n});\r\nPauseModalPlayButton.addEventListener(\"click\", () => {\r\n    UnpauseGame();\r\n});\r\naddEventListener(\"keypress\", (event) => {\r\n    if (event.key == \"q\" && GameStarted) {\r\n        if (!Paused) {\r\n            PauseGame();\r\n        } else {\r\n            CloseOptionsMenu();\r\n            OptionsOpen = false;\r\n            UnpauseGame();\r\n\r\n        }\r\n    }\r\n});\r\nPauseModalOpenerButton.addEventListener(\"click\", () => {\r\n    if (GameStarted) {\r\n        if (!Paused) {\r\n            PauseGame();\r\n        } else {\r\n            CloseOptionsMenu();\r\n            OptionsOpen = false;\r\n            UnpauseGame();\r\n        }\r\n    }\r\n});\r\nPauseModalOptionsButton.addEventListener(\"click\", () => {\r\n    OpenOptionsMenu();\r\n    OptionsOpen = true;\r\n});\r\nOptionsBackButton.addEventListener(\"click\", () => {\r\n    CloseOptionsMenu();\r\n    OptionsOpen = false;\r\n});\r\n\r\nOptionsParticleSwitch.addEventListener(\"change\", () => {\r\n    UseParticles = !UseParticles;\r\n});\r\nOptionsAimSlider.addEventListener(\"change\", () => {\r\n    if (OptionsAimSlider.value == \"0\") {\r\n        ShowPlayerAim = false;\r\n    } else {\r\n        ShowPlayerAim = true;\r\n    }\r\n    player.spread = Number(OptionsAimSlider.value);\r\n\r\n});\r\nOptionsSFXSlider.addEventListener(\"change\", () => {\r\n    if (OptionsSFXSlider.value == \"0\") {\r\n        SFXMuted = true;\r\n    } else {\r\n        SFXMuted = false;\r\n    }\r\n    UpdateSFXSlider();\r\n});\r\n","function animate() {\r\n    animationID = requestAnimationFrame(animate);\r\n    //set a bunch of debug items\r\n    SetDebugItem(innerWidth, \"windowWidth\");\r\n    SetDebugItem(innerHeight, \"windowHeight\");\r\n    SetDebugItem(innerHeight * innerWidth, \"WindowArea\");\r\n    SetDebugItem((Math.sqrt(innerWidth * innerWidth + innerHeight * innerHeight) / 2000), \"EnemySpeedMultiplier\");\r\n    //if the game is not paused\r\n    if (!Paused) {\r\n        /*\r\n        1. If the animationID is divisible by EnemySpawnTime, and the number of enemies is less than MaxEnemies, we spawn an enemy.\r\n        2. Or, if the number of enemies is lower than 5 less than the MaxEnemies, we also spawn an enemy.\r\n        3. We then decrement the EnemySpawnTime by 0.125.\r\n        4. We also clamp the EnemySpawnTime to a minimum of 1.\r\n        */\r\n        if (((animationID % Math.floor(EnemySpawnTime) == 0 && enemies.length < MaxEnemies) || enemies.length < MaxEnemies - 5)) {\r\n            SpawnEnemy();\r\n            EnemySpawnTime -= 0.125;\r\n            EnemySpawnTime = clamp(EnemySpawnTime, 1, DefaultEnemySpawnTime * 2);\r\n        }\r\n        SetDebugItem(EnemySpawnTime, \"SpawnTime\")\r\n        //draw the player\r\n        player.update();\r\n\r\n        //fill the canvas with an almost black.\r\n        //the 0.1 Alpha value means that things have a nice fade out effect\r\n        c.fillStyle = 'rgba(0,0,0,0.1)'\r\n\r\n        c.fillRect(0, 0, w, h);\r\n        if (UseParticles) {\r\n            //draw the particles\r\n            particles.forEach((particle, index) => {\r\n                //if the alpha (opacity) is less than, or equal to zero, remove the particle\r\n                if (particle.alpha <= 0 || index > ParticleCap) {\r\n                    particles.splice(index, 1);\r\n                } else {\r\n                    //otherwise, update the particle.\r\n                    particle.update();\r\n                }\r\n            });\r\n        }\r\n        //draw the projectiles\r\n        projectiles.forEach((projectile, index) => {\r\n            projectile.update();\r\n            //if the projectile is off the screen, delete it. This saves rendering time, and improves performance.\r\n            if (projectile.IsOffScreen) {\r\n                projectiles.splice(index, 1);\r\n                if (!SFXMuted) {\r\n                    MissSound.play();\r\n                }\r\n            }\r\n        });\r\n        //draw the enemies\r\n        enemies.forEach((enemy, index) => {\r\n            //update each enemy\r\n            let r = enemy.update();\r\n            if (r == \"dead\") {\r\n                enemies.splice(index, 1);\r\n\r\n            }\r\n            else {\r\n                //get the distance to the player\r\n                const dist = distance(player.x, player.y, enemy.x, enemy.y);\r\n                //if the enemy is touching the player\r\n                if (dist - enemy.radius - player.radius < 0) {\r\n                    //if the player has no more health\r\n                    if (player.willDie) {\r\n                        //remove the healthbar\r\n                        player.Health.removeHealth();\r\n                        //and game over, passing in the animationID, so we can stop it.\r\n                        gameOver(animationID);\r\n                    } else {\r\n                        //otherwise, remove a health\r\n                        player.Health.removeHealth();\r\n                        //and play the healthlose sound\r\n                        if (!SFXMuted) {\r\n                            HealthLoseSound.play();\r\n                            //if we are not in production\r\n                            if (!DEBUGFLAG) {\r\n                                console.log(\"HealthLoseSound\");\r\n                            }\r\n                        };\r\n                        //remove the enemy\r\n                        enemies.splice(index, 1);\r\n                        //and update the player's debug item with their new health\r\n                        SetDebugItem(player.Health.Health, \"playerHealth\");\r\n                        //and update the EnemySpawn Time, so it is a little less punishing\r\n                        //also, set MaxEnemies to 10, its default value\r\n                        //this is to keep the game from getting too hard,\r\n                        //while still making it fun\r\n                        EnemySpawnTime = clamp(EnemySpawnTime + 10, 40, 70);\r\n                        MaxEnemies = 10;\r\n                        EnemySpeedMult = 1;\r\n\r\n                    }\r\n                    // SetHealthICONs(player.Health, player.MaxHealth);\r\n                }\r\n                projectiles.forEach((projectile, index2) => {\r\n                    //get the distance between the projectile and the enemy\r\n                    const dist = distance(projectile.x, projectile.y, enemy.x, enemy.y);\r\n                    // if dist minus the radiuses of the enemy and the projectile are less than 0, shrink or destroy the enemy\r\n                    if (dist - enemy.radius - projectile.radius < 0) {\r\n                        if (UseParticles) {\r\n                            for (let i = 0; i < Math.round(enemy.radius * 2 * ParticleMultiplier * random()); i++) {\r\n                                //add a particle to the rendering list\r\n                                particles.push(new Particle(projectile.x,\r\n                                    projectile.y,\r\n                                    //give it a random radius\r\n                                    random(1, 5),\r\n                                    //set its color to the killed enemy's\r\n                                    enemy.color,\r\n                                    // give it a random speed\r\n                                    {\r\n                                        x: ((random() + (projectile.velocity.x / (2 * player.ShotSpeed * ProjectileSpeedMultiplier))) * random() * ParticleSpeed),\r\n                                        y: ((random() + (projectile.velocity.y / (2 * player.ShotSpeed * ProjectileSpeedMultiplier))) * random() * ParticleSpeed)\r\n                                    }));\r\n                            }\r\n                        }\r\n                        //damage the enemy\r\n                        enemy.damage(projectile.damage);\r\n\r\n                        //and check if it is dead\r\n                        if (enemy.IsDead) {\r\n                            //if it is\r\n                            //play the HitAndKill Sound\r\n                            if (!SFXMuted) {\r\n                                HitAndKillSound.play();\r\n                            }\r\n                            //add the score, and update the content\r\n                            AddScore(20 * enemy.startingRadius);\r\n                            // delete the enemy and projectile, after a small delay\r\n                            setTimeout(() => {\r\n                                enemies.splice(index, 1);\r\n                                projectiles.splice(index2, 1);\r\n                            }, 1);\r\n                        } else {\r\n                            //if it isn't\r\n                            //play the HitNoKill sound\r\n                            if (!SFXMuted) {\r\n                                HitNoKillSound.play();\r\n                            }\r\n                            //add the score\r\n                            AddScore(15 * enemy.radius);\r\n                            //and delete the projectile, after 10 miliseconds\r\n                            //the delay helps prevent stuttering.\r\n                            setTimeout(() => {\r\n                                projectiles.splice(index2, 1);\r\n                            }, 1);\r\n                        }\r\n                    }\r\n                    if (dist - enemy.radius - projectile.radius < 20) {\r\n                        if (!SFXMuted) {\r\n                            MissSound.play();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n        });\r\n        //if you have passed HealthFreq, and your score is not zero,\r\n        if ((lastScore % HealthFreq > score % HealthFreq) && (score != 0)) {\r\n            //add one health\r\n            player.Health.addHealth(1)\r\n            //and play a sound\r\n            if (!SFXMuted) {\r\n                HealthGetSound.play();\r\n            }\r\n        }\r\n        // if you have passed EnemyUpFreq, and your score is not zero,\r\n        if ((lastScore % EnemyUpFreq > score % EnemyUpFreq) && (score != 0)) {\r\n            EnemySpeedMult *= 1.001;\r\n            EnemySpawnTime *= 0.999;\r\n            if (coinFlip(0.2)) {\r\n                MaxEnemies++;\r\n            }\r\n\r\n\r\n            MaxEnemies = clamp(MaxEnemies, 10, 45);\r\n            EnemyUpFreq *= 0.999;\r\n            EnemyUpFreq = round(EnemyUpFreq, -2);\r\n            SetDebugItem(MaxEnemies,\"MaxEnemies\");\r\n            SetDebugItem(EnemySpeedMult, \"EnemySpawnMult\");\r\n            SetDebugItem(EnemySpawnTime,\"SpawnTime\");\r\n        }\r\n        //update the score\r\n        lastScore = score;\r\n    }\r\n}\r\n","function init() {\r\n    EnemySpawnTime = DefaultEnemySpawnTime;\r\n    Paused = false;\r\n    player = new Player(cw, ch, PlayerRadius, PlayerColor);\r\n    projectiles = [];\r\n    enemies = [];\r\n    particles = [];\r\n    score = 0;\r\n    scoreEL.innerHTML = score.toString(10);\r\n    BigScoreEL.innerHTML = score.toString(10);\r\n    GameStarted = true;\r\n}\r\nfunction PageLoad() {\r\n    ModalEL.style.display = \"flex\";\r\n    OptionsSFXSlider.value = \"0\";\r\n    OptionsAimSlider.value = \"0\";\r\n    HighScoreLabel.style.display = \"none\";\r\n    document.body.style.display = \"block\";\r\n    if (!MOBILEVIEW) {\r\n        PauseModalOpenerButton.style.display = \"none\";\r\n        PauseModalOpenerIcon.style.display = \"none\";\r\n    }\r\n    else {\r\n        PauseModalOpenerButton.style.display = \"block\";\r\n        PauseModalOpenerIcon.style.display = \"block\";\r\n    }\r\n    \r\n    CloseOptionsMenu();\r\n    UnpauseGame();\r\n    AddDebugItem(0, \"playerLevel\")\r\n    AddDebugItem(0, \"playerCashedLevels\")\r\n    AddDebugItem(false, \"CantSpawn\")\r\n    AddDebugItem(5, \"playerHealth\");\r\n    AddDebugItem(EnemySpawnTime, \"SpawnTime\");\r\n    AddDebugItem(EnemySpawnBias, \"Bias\");\r\n    player.Health.draw();\r\n    Paused = true;\r\n    OptionsOpen = false;\r\n}\r\nfunction UpdateSFXSlider() {\r\n    ShootSound.muted = SFXMuted\r\n    HitNoKillSound.muted = SFXMuted\r\n    HitAndKillSound.muted = SFXMuted\r\n    HealthGetSound.muted = SFXMuted\r\n    HealthLoseSound.muted = SFXMuted\r\n    MissSound.muted = SFXMuted\r\n    if (!SFXMuted) {\r\n        ShootSound.volume = parseFloat(OptionsSFXSlider.value);\r\n        HitNoKillSound.volume = parseFloat(OptionsSFXSlider.value);\r\n        HitAndKillSound.volume = parseFloat(OptionsSFXSlider.value);\r\n        HealthGetSound.volume = parseFloat(OptionsSFXSlider.value);\r\n        HealthLoseSound.volume = parseFloat(OptionsSFXSlider.value);\r\n        MissSound.volume = parseFloat(OptionsSFXSlider.value);\r\n    }\r\n}\r\n\r\n\r\nfunction SpawnEnemy() {\r\n    //create a new enemy\r\n    //give it an x, and y.\r\n    let x: number;\r\n    let y: number;\r\n    //give it a radius\r\n    const radius = (random(4, 30) * EnemyMultiplier) + 4;\r\n    //randomly decide whether to spawn it height or width-wise\r\n    if (coinFlip(EnemySpawnBias)) {\r\n        //spawn it along the x axis\r\n        x = coinFlip() ? 0 - radius : w + radius;\r\n        y = random(0, h);\r\n    } else {\r\n        //spawn it along the y axis\r\n        x = random(0, w);\r\n        y = coinFlip() ? 0 - radius : h + radius;\r\n    }\r\n    //choose a random color\r\n    //the 50 saturation and lightness gives it a pastel-like color\r\n    const color = `hsl(${random(0, 360)},50%,50%)`;\r\n    //calculate the angle to the center from its current position\r\n    const angle = Math.atan2(ch - y, cw - x);\r\n    //set the x and y values accordingly\r\n    const velocity = {\r\n        x: Math.cos(angle) * EnemyMultiplier * EnemySpeedMult,\r\n        y: Math.sin(angle) * EnemyMultiplier * EnemySpeedMult\r\n    };\r\n    //add it to the enemies list\r\n    enemies.push(new Enemy(x, y, radius, color, velocity));\r\n}\r\n\r\n//add and update the score\r\nfunction AddScore(Value: number) {\r\n    score += floor(Value, 1);\r\n    scoreEL.innerHTML = score.toString(10);\r\n    BigScoreEL.innerHTML = score.toString(10);\r\n}\r\n\r\n\r\n\r\nfunction gameOver(AnimationID: number) {\r\n    cancelAnimationFrame(AnimationID);\r\n    if (Scores.scores.every((value) => { return value < score })) {\r\n        HS = true\r\n    } else {\r\n        HS = false\r\n    }\r\n    Scores.addScore(score);\r\n    GameStarted = false;\r\n    //and add the end screen back up\r\n    ModalEL.setAttribute(\"style\", \"display:flex;\");\r\n    HighScoreList.innerHTML = Scores.Html;\r\n    console.log(Scores)\r\n    HighScoreLabel.style.display = HS ? \"block\" : \"none\";\r\n    BigScoreELLabel.style.display = \"block\";\r\n    BigScoreEL.style.display = \"block\";\r\n    BigScoreEL.innerText = score.toString();\r\n    BigScoreEL.classList.add(\"animate-bounce\")\r\n}\r\n\r\nfunction PauseGame(): void {\r\n    PauseModal.style.display = \"block\";\r\n    PauseModalScore.innerHTML = score.toString(10);\r\n    Paused = true;\r\n};\r\n\r\nfunction UnpauseGame(): void {\r\n    PauseModal.style.display = \"none\"\r\n    Paused = false;\r\n};\r\n\r\nfunction OpenOptionsMenu(): void {\r\n\r\n    OptionsParticleSpan.style.display = \"block\"\r\n    OptionsMenu.style.display = \"block\";\r\n    OptionsSFXSlider.style.display = \"block\";\r\n    OptionsBackButton.style.display = \"block\";\r\n    OptionsParticleSwitch.style.display = \"block\"\r\n    OptionsAimSlider.style.display = \"block\";\r\n    OptionsOpen = true;\r\n};\r\n\r\nfunction CloseOptionsMenu(): void {\r\n    OptionsParticleSpan.style.display = \"none\";\r\n    OptionsMenu.style.display = \"none\";\r\n    OptionsSFXSlider.style.display = \"none\";\r\n    OptionsBackButton.style.display = \"none\";\r\n    OptionsParticleSwitch.style.display = \"none\";\r\n    OptionsAimSlider.style.display = \"none\";\r\n    OptionsOpen = false;\r\n};\r\nfunction spawnProjectile(x?: number, y?: number) {\r\n    if (GameStarted == true && Paused == false) {\r\n        x = x || mouse.x + (mouse.dx*10);\r\n        y = y || mouse.y + (mouse.dy*10);\r\n        //get the x and y of the click\r\n        //find the angle from the center\r\n        const angle = Math.atan2(y - ch, x - cw);\r\n        //set velocity accordingly\r\n        const velocity = {\r\n            x: Math.cos(angle) * player.ShotSpeed * ProjectileSpeedMultiplier,\r\n            y: Math.sin(angle) * player.ShotSpeed * ProjectileSpeedMultiplier,\r\n        };\r\n        const radius = 5;\r\n        const damage = player.Damage;\r\n        //add it to the projectiles list\r\n        projectiles.push(\r\n            new Projectile(cw, ch, radius, ProjectileColor, velocity, damage)\r\n        );\r\n        if (!SFXMuted) {\r\n            ShootSound.play();\r\n        }\r\n    }\r\n}\r\nfunction calculateRWA() {\r\n    let minDist = min(innerWidth, innerHeight);\r\n    let maxDist = max(innerWidth, innerHeight);\r\n    let a = maxDist - minDist;\r\n    let b = maxDist + minDist;\r\n    let c = sigmoid(a / b, 0.5);\r\n    let d = 1.5 - c;\r\n    return d;\r\n}\r\nfunction renderWireframe(object: { x: number, y: number, radius: number; }, type: string) {\r\n    if (DEBUGFLAG && RenderWireframe) {\r\n        switch (type) {\r\n            case \"particle\":\r\n                c.strokeStyle = \"rgb(0,0,255)\";\r\n\r\n                break;\r\n            case \"enemy\":\r\n                c.strokeStyle = \"rgb(255,0,0)\";\r\n                break;\r\n            case \"projectile\":\r\n                c.strokeStyle = \"rgb(0,255,0)\";\r\n                break;\r\n            case \"player\":\r\n                c.strokeStyle = \"rgb(0,255,255)\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        c.strokeRect(object.x - object.radius, object.y - object.radius, (object.radius * 2), (object.radius * 2));\r\n        c.stroke();\r\n    }\r\n}\r\nfunction sanityCheck(object: { x: number, y: number, radius: number; }): boolean {\r\n    if (object.radius < 0) {\r\n        console.error(`${object} radius is negative`);\r\n        return false;\r\n    }\r\n\r\n    if (object.x - object.radius < 0 || object.x + object.radius > w || object.y - object.radius < 0 || object.y + object.radius > h) {\r\n        console.error(`${object} is out of bounds`);\r\n        return false;\r\n    }\r\n    return true;\r\n}"]}